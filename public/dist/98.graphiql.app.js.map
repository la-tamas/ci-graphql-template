{"version":3,"file":"98.graphiql.app.js","mappings":";;;;;;;;;;;AAAA;AACA,4DAA4D,2BAA2B;AAClC;AACpC;AACiF;AACnF;AACI;AACnB;AACA;AACA,UAAU,sBAAsB;AAChC;AACA;AACA;AACA;AACA;AACA,iBAAiB,+CAAY;AAC7B,+CAA+C,2CAAS;AACxD,cAAc,2CAAQ;AACtB,gBAAgB,2CAAU;AAC1B,oBAAoB;AACpB,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,0BAA0B;AAC1B;AACA;AACA;AACA,oBAAoB;AACpB,sBAAsB;AACtB;AACA;AACA,CAAC;AACD,2DAAqB","sources":["webpack://fe-images/./node_modules/@graphiql/react/dist/mode.es.js"],"sourcesContent":["var __defProp = Object.defineProperty;\nvar __name = (target, value) => __defProp(target, \"name\", { value, configurable: true });\nimport { C as CodeMirror } from \"./codemirror.es.js\";\nimport \"graphql\";\nimport { o as onlineParser, i as isIgnored, L as LexRules, P as ParseRules } from \"./index.es.js\";\nimport \"react\";\nimport \"react-dom\";\nfunction indent(state, textAfter) {\n  var _a, _b;\n  const { levels, indentLevel } = state;\n  const level = !levels || levels.length === 0 ? indentLevel : levels[levels.length - 1] - (((_a = this.electricInput) === null || _a === void 0 ? void 0 : _a.test(textAfter)) ? 1 : 0);\n  return (level || 0) * (((_b = this.config) === null || _b === void 0 ? void 0 : _b.indentUnit) || 0);\n}\n__name(indent, \"indent\");\nconst graphqlModeFactory = /* @__PURE__ */ __name((config) => {\n  const parser = onlineParser({\n    eatWhitespace: (stream) => stream.eatWhile(isIgnored),\n    lexRules: LexRules,\n    parseRules: ParseRules,\n    editorConfig: { tabSize: config.tabSize }\n  });\n  return {\n    config,\n    startState: parser.startState,\n    token: parser.token,\n    indent,\n    electricInput: /^\\s*[})\\]]/,\n    fold: \"brace\",\n    lineComment: \"#\",\n    closeBrackets: {\n      pairs: '()[]{}\"\"',\n      explode: \"()[]{}\"\n    }\n  };\n}, \"graphqlModeFactory\");\nCodeMirror.defineMode(\"graphql\", graphqlModeFactory);\n"],"names":[],"sourceRoot":""}
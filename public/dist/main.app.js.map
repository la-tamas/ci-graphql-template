{"version":3,"file":"main.app.js","mappings":"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","sources":["webpack://App/webpack/universalModuleDefinition","webpack://App/./react/src/components/error/GeneralErrorBoundary.tsx","webpack://App/./react/src/graphql/queries/getTranslations.ts","webpack://App/./react/src/hooks/queries/useGetTranslations.ts","webpack://App/./react/src/utils/convertTranslations.ts","webpack://App/./react/src/components/common/loaders/linearLoader.styles.ts","webpack://App/./react/src/components/common/loaders/LinearLoader.tsx","webpack://App/./react/src/components/provider/TranslationProvider.tsx","webpack://App/./react/src/graphql/client.ts","webpack://App/./react/src/theme/fontSizes.ts","webpack://App/./react/src/theme/defaultTheme.ts","webpack://App/./react/src/components/common/MainRouter.tsx","webpack://App/./react/src/components/Root.tsx","webpack://App/./react/main.app.tsx"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"App\"] = factory();\n\telse\n\t\troot[\"App\"] = factory();\n})(self, () => {\nreturn ","/* eslint-disable @typescript-eslint/no-explicit-any */\r\nimport { Component, ReactNode } from 'react'\r\n\r\nexport default class GeneralErrorBoundary extends Component<{children?: React.ReactElement | JSX.Element | React.ReactElement[]}, { error: any }> {\r\n    state: {\r\n        error: any\r\n    } = {\r\n        error: null,\r\n    }\r\n\r\n    public static getDerivedStateFromError(error: any): { error: any } {\r\n        return { error }\r\n    }\r\n\r\n    public render(): ReactNode {\r\n        if(this.state.error) {\r\n            return (\r\n                <div>\r\n                    {this.state.error.message}\r\n                </div>\r\n            )\r\n        }\r\n\r\n        return this.props.children;\r\n    }\r\n}","import { gql } from '@apollo/client'\r\n\r\nexport const GET_TRANSLATIONS = gql`\r\n  query GetTranslations($language: String!) {\r\n    getTranslations(language: $language) {\r\n        code\r\n        value\r\n    }\r\n  }\r\n`;","import { useCallback } from 'react';\r\nimport { useQuery } from '@apollo/client'\r\nimport { GET_TRANSLATIONS } from '../../graphql/queries/getTranslations'\r\nimport type { Translation } from '../../types/Translation'\r\n\r\nconst useGetTranslations = (language: string) => {\r\n    const { loading, error, data, refetch } = useQuery(GET_TRANSLATIONS, {\r\n        variables: {\r\n            language: language,\r\n        },\r\n        skip: !language\r\n    })\r\n\r\n    const result = data?.getTranslations as Translation[]\r\n\r\n    const reloadTranslations = useCallback(async (language: string) => {\r\n        return await refetch({\r\n            language\r\n        })\r\n    }, [refetch])\r\n\r\n    return {\r\n        loading,\r\n        error,\r\n        data: result,\r\n        reloadTranslations\r\n    }\r\n}\r\n\r\nexport default useGetTranslations","import type { Translation } from '../types/Translation'\r\n\r\ntype TranslationMap = Record<string, string>\r\n\r\nconst defaultMap: TranslationMap = {\r\n    trans__default: 'empty'\r\n}\r\n\r\nexport function convertTranslations(data?: Translation[]): TranslationMap {\r\n    if (!data) {\r\n        return defaultMap\r\n    }\r\n\r\n    return data.reduce((prev, { code, value }) => Object.assign({}, { ...prev, [code]: value }), defaultMap)\r\n}\r\n","import { Theme } from '@mui/material'\r\nimport { makeStyles } from '@mui/styles'\r\n\r\ntype LinearLoaderClasses = 'root' | 'loader' | 'loaderBar'\r\n\r\nconst linearLoaderStyles = makeStyles<Theme, object, LinearLoaderClasses>(\r\n    () => ({\r\n        root: {\r\n            position: 'absolute',\r\n            top: 0,\r\n            width: '100%'\r\n        },\r\n        loader: {\r\n\r\n        },\r\n        loaderBar: {\r\n\r\n        }\r\n    }),\r\n    {\r\n        name: 'LinearLoader'\r\n    }\r\n)\r\n\r\nexport default linearLoaderStyles","import { FunctionComponent } from 'react'\r\nimport Box from '@mui/material/Box'\r\nimport LinearProgress from '@mui/material/LinearProgress'\r\nimport linearLoaderStyles from './linearLoader.styles'\r\n\r\nconst LinearLoader: FunctionComponent = () => {\r\n    const styles = linearLoaderStyles()\r\n\r\n    return (\r\n        <Box className={styles.root}>\r\n            <LinearProgress\r\n                className={styles.loader}\r\n                classes={{\r\n                    bar: styles.loaderBar\r\n                }}\r\n            />\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default LinearLoader\r\n","import { FunctionComponent, ReactElement, useMemo } from 'react'\r\nimport { IntlProvider } from 'react-intl'\r\nimport useGetTranslations from '../../hooks/queries/useGetTranslations'\r\nimport { convertTranslations } from '../../utils/convertTranslations'\r\nimport LinearLoader from '../common/loaders/LinearLoader'\r\n\r\ntype TranslationProviderProps = {\r\n    children?: ReactElement | ReactElement[] | JSX.Element\r\n}\r\n\r\nconst TranslationProvider: FunctionComponent<TranslationProviderProps> = ({ children }) => {\r\n    const { data, loading, error } = useGetTranslations('en-en')\r\n\r\n    const translationMap = useMemo(() => convertTranslations(data), [data])\r\n\r\n    if (error) {\r\n        /** @TODO add error component */\r\n        return null\r\n    }\r\n\r\n    if (loading || Object.keys(translationMap).length === 0) {\r\n        return (\r\n            <LinearLoader />\r\n        )\r\n    }\r\n\r\n    return (\r\n        <IntlProvider messages={translationMap} locale='ro-ro' defaultLocale='ro-ro'>\r\n            {children}\r\n        </IntlProvider>\r\n    )\r\n}\r\n\r\nexport default TranslationProvider","import { ApolloClient, InMemoryCache } from '@apollo/client'\r\n\r\nexport const client = new ApolloClient({\r\n    uri: 'http://localhost:8080/graphql',\r\n    cache: new InMemoryCache(),\r\n})\r\n","export const fontSize = {\r\n    fontXXS: 8,\r\n    fontXS: 10,\r\n    fontSM: 12,\r\n    fontMD: 16,\r\n    fontXL: 20,\r\n    fontXXL: 24,\r\n}","import { createTheme } from '@mui/material'\r\n//import { colors } from './colors'\r\nimport { fontSize } from './fontSizes'\r\n\r\n// @TODO: Insert global theme configs here\r\nexport const theme = createTheme({\r\n    // @TODO: Refine custom theme colors\r\n    // palette: {\r\n    //     primary: {\r\n    //         main: colors.primary,\r\n    //         light: colors.primary,\r\n    //     },\r\n    //     secondary: {\r\n    //         main: colors.secondary,\r\n    //         light: colors.secondary,\r\n    //     },\r\n    //     background: {\r\n    //         default: colors.white,\r\n    //         paper: colors.white\r\n    //     },\r\n    //     action: {\r\n    //         hover: colors.primaryActive,\r\n    //         hoverOpacity: 0.5,\r\n    //         focus: colors.secondaryActive,\r\n    //         focusOpacity: 0.5,\r\n    //     },\r\n    //     common: {\r\n    //         black: colors.black,\r\n    //         white: colors.white,\r\n    //     },\r\n    // },\r\n    typography: {\r\n        htmlFontSize: 10,\r\n        h1: {\r\n            fontSize: fontSize.fontXXL,\r\n        },\r\n        h2: {\r\n            fontSize: fontSize.fontXL,\r\n        },\r\n        h3: {\r\n            fontSize: fontSize.fontMD\r\n        },\r\n        h4: {\r\n            fontSize: fontSize.fontMD,\r\n        },\r\n        h5: {\r\n            fontSize: fontSize.fontXS,\r\n        },\r\n        h6: {\r\n            fontSize: fontSize.fontXXS\r\n        }\r\n    },\r\n    components: {\r\n        // MuiButton: {\r\n        //     styleOverrides: {\r\n        //         root: {\r\n        //             borderRadius: 0,\r\n        //         }\r\n        //     }\r\n        // },\r\n        // MuiInput: {\r\n        //     styleOverrides: {\r\n        //         root: {\r\n        //             borderRadius: 0,\r\n        //         },\r\n        //     }\r\n        // },\r\n        // MuiOutlinedInput: {\r\n        //     styleOverrides: {\r\n        //         notchedOutline: {\r\n        //             borderRadius: 0,\r\n        //         },\r\n        //         root: {\r\n        //             borderRadius: 0,\r\n        //         }\r\n        //     }\r\n        // },\r\n        // MuiCard: {\r\n        //     styleOverrides: {\r\n        //         root: {\r\n        //             borderRadius: 0\r\n        //         }\r\n        //     }\r\n        // },\r\n        // MuiSvgIcon: {\r\n        //     styleOverrides: {\r\n        //         root: {\r\n        //             fontSize: 'unset'\r\n        //         }\r\n        //     }\r\n        // }\r\n    }\r\n})","import { FunctionComponent, Suspense } from 'react'\r\nimport { BrowserRouter, Routes as Switch, Route } from 'react-router-dom'\r\n\r\nconst MainRouter: FunctionComponent = () => {\r\n    return (\r\n        <BrowserRouter>\r\n            <Switch>\r\n                <Route\r\n                    path={'/'}\r\n                    errorElement={'Error'}\r\n                    element={\r\n                        <Suspense fallback={'Loading...'}>\r\n                            {'Hello'}\r\n                        </Suspense>\r\n                    }\r\n                /> \r\n            </Switch>\r\n        </BrowserRouter>\r\n    )\r\n}\r\n\r\nexport default MainRouter","import { FunctionComponent } from 'react'\r\nimport { ApolloProvider } from '@apollo/client'\r\nimport { ThemeProvider } from '@mui/material'\r\nimport TranslationProvider from './provider/TranslationProvider'\r\nimport { client } from '../graphql/client'\r\nimport { theme } from '../theme/defaultTheme'\r\nimport MainRouter from './common/MainRouter'\r\n\r\nconst Root: FunctionComponent = () => {\r\n    return (\r\n        <ApolloProvider client={client}>\r\n            <ThemeProvider theme={theme}>\r\n                <TranslationProvider>\r\n                    <MainRouter />\r\n                </TranslationProvider>\r\n            </ThemeProvider>\r\n        </ApolloProvider>\r\n    )\r\n}\r\n\r\nexport default Root\r\n","/*eslint-disable @typescript-eslint/no-explicit-any */\r\nimport { createRoot, Root } from 'react-dom/client'\r\nimport GeneralErrorBoundary from './src/components/error/GeneralErrorBoundary'\r\nimport RootComponent from './src/components/Root'\r\n\r\nconst lifecycle = {\r\n    create: async (containerId: string): Promise<any> => {\r\n        return new Promise((resolve: (facade?: any) => any) => {\r\n            const container = document.getElementById(containerId)\r\n            const root = container && createRoot(container)\r\n\r\n            root?.render(\r\n                <GeneralErrorBoundary ref={() => resolve(root)}>\r\n                    <RootComponent />\r\n                </GeneralErrorBoundary>\r\n            )\r\n        })\r\n        .catch((error) => {\r\n            const container = document.getElementById(containerId)\r\n            const root = container && createRoot(container)\r\n\r\n            root?.render(\r\n                <div>\r\n                    <p>Error</p>\r\n                    <p>{error.message}</p>\r\n                </div>\r\n            )\r\n\r\n            throw error\r\n        })\r\n    },\r\n\r\n    destroy: (root: Root | undefined | null): void => {\r\n        if (root) {\r\n            root.unmount()\r\n        }\r\n    }\r\n}\r\n\r\nexport default class Initializer {\r\n    public static app = lifecycle\r\n}\r\n\r\nexport const library = Object.freeze(lifecycle)"],"names":[],"sourceRoot":""}